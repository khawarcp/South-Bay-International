

<header id="header" class="d-flex a-center space-b">
    <div class="container d-flex a-center space-b">
        {%- if request.page_type == 'index' -%}
            <h1 class="header__heading">
            {%- endif -%}
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                <a href="{{ routes.root_url }}" class="header-logo">
                {%- if settings.logo != blank -%}
                    <img src="{{ settings.logo | image_url }}"  alt="{{ logo_alt }}">
                {%- else -%}
                    <span class="h2">{{ shop.name }}</span>
                {%- endif -%}
                </a>
            {%- if request.page_type == 'index' -%}
            </h1>
            {%- endif -%}
                
        <div class="header-cta d-flex a-center space-b">
            <div class="search-func d-flex a-center">
                <form class="search-box" id="search-click" action="/search">
                    <input 
                    type="search"
                    name="q"
                    value="{{ search.terms | escape }}" class="text search-input" placeholder="Type here to search..." />
                </form>

                <a href="#." id="search-toggle"><img src="{{'search-icon.svg' | asset_url}}" alt="search-icon"></a>
            </div>
            {% if section.settings.dealer_login != blank %}                
                <a class="header-dealer-log-in tab-hidden" href="{{ section.settings.dealer_url | default : "#." }}"> {{ section.settings.dealer_login }} </a>
            {% endif %}
            {% if section.settings.dealer_register != blank %}
                <a href="{{ section.settings.dealer_register_url | default : "#." }}" class="primary-btn tab-hidden">{{ section.settings.dealer_register }}</a>
            {% endif %}
            {% if section.settings.contact_button != blank %}
                <a href="{{ section.settings.contact_button_url | default : "#." }}" class="primary-btn tab-hidden">{{ section.settings.contact_button }}</a>
            {% endif %}
            <nav id="nav" class="menusflex">
                <ul class="d-flex a-center space-b">
                    {% for link in linklists[section.settings.main_menu].links %}                        
                        <li><a href="{{ link.url }}">{{ link.title }}</a></li>
                    {% endfor %}
            
                    {% if section.settings.dealer_login != blank %}                                        
                        <li class="desktop-hidden-tab"><a href="{{ section.settings.dealer_url | default : "#." }}">{{ section.settings.dealer_login }}</a></li>
                    {% endif %}
                    {% if section.settings.dealer_register != blank %}
                        <li class="desktop-hidden-tab"><a href="{{ section.settings.dealer_register_url | default : "#." }}">{{ section.settings.dealer_register }}</a></li>
                    {% endif %}
                    {% if section.settings.contact_button != blank %}                        
                        <li class="desktop-hidden-tab"><a href="{{ section.settings.contact_button_url | default : "#." }}">{{ section.settings.contact_button }}</a></li>
                    {% endif %}
                </ul>
            </nav>
            <div class="toggle-menu">
                <div class="hamburger d-flex a-center jc-end" id="hamburger-6">
                    <img class="header-hamburger-icon" src="{{'header-hamburger-icon.svg' | asset_url}}"
                        alt="Menu">
                    <span class="header-hamburger-text">Menu</span>
                    <div class="toggle-click-bars">
                        <span class="line"></span>
                        <span class="line"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
    "name": "Header",
    "settings": [
        {
            "type": "link_list",
            "id": "main_menu",
            "label": "Main Menu"
        },
        {
            "type": "text",
            "id": "dealer_login",
            "label": "Button Text",
            "default": "Dealer Log In"
        },
        {
            "type": "url",
            "id": "dealer_url",
            "label": "Dealer Login URL"
        },
        {
            "type": "text",
            "id": "dealer_register",
            "label": "Button Text",
            "default": "Dealer Log In"
        },
        {
            "type": "url",
            "id": "dealer_register_url",
            "label": "Dealer Register URL"
        },
        {
            "type": "text",
            "id": "contact_button",
            "label": "Button Text",
            "default": "Dealer Log In"
        },
        {
            "type": "url",
            "id": "contact_button_url",
            "label": "Page URL"
        }
    ]
}
{% endschema %}
